|dice
row[0] << dot_matrix:u_dot_matrix.row
row[1] << dot_matrix:u_dot_matrix.row
row[2] << dot_matrix:u_dot_matrix.row
row[3] << dot_matrix:u_dot_matrix.row
row[4] << dot_matrix:u_dot_matrix.row
row[5] << dot_matrix:u_dot_matrix.row
row[6] << dot_matrix:u_dot_matrix.row
row[7] << dot_matrix:u_dot_matrix.row
r_col[0] << dot_matrix:u_dot_matrix.r_col
r_col[1] << dot_matrix:u_dot_matrix.r_col
r_col[2] << dot_matrix:u_dot_matrix.r_col
r_col[3] << dot_matrix:u_dot_matrix.r_col
r_col[4] << dot_matrix:u_dot_matrix.r_col
r_col[5] << dot_matrix:u_dot_matrix.r_col
r_col[6] << dot_matrix:u_dot_matrix.r_col
r_col[7] << dot_matrix:u_dot_matrix.r_col
g_col[0] << dot_matrix:u_dot_matrix.g_col
g_col[1] << dot_matrix:u_dot_matrix.g_col
g_col[2] << dot_matrix:u_dot_matrix.g_col
g_col[3] << dot_matrix:u_dot_matrix.g_col
g_col[4] << dot_matrix:u_dot_matrix.g_col
g_col[5] << dot_matrix:u_dot_matrix.g_col
g_col[6] << dot_matrix:u_dot_matrix.g_col
g_col[7] << dot_matrix:u_dot_matrix.g_col
rst => rst.IN6
clk => clk.IN8
start1 => start1.IN1
start2 => start2.IN1
clk_div << <GND>
dice1[0] << dice1[0].DB_MAX_OUTPUT_PORT_TYPE
dice1[1] << dice1[1].DB_MAX_OUTPUT_PORT_TYPE
dice1[2] << dice1[2].DB_MAX_OUTPUT_PORT_TYPE
dice1[3] << dice1[3].DB_MAX_OUTPUT_PORT_TYPE
dice2[0] << dice2[0].DB_MAX_OUTPUT_PORT_TYPE
dice2[1] << dice2[1].DB_MAX_OUTPUT_PORT_TYPE
dice2[2] << dice2[2].DB_MAX_OUTPUT_PORT_TYPE
dice2[3] << dice2[3].DB_MAX_OUTPUT_PORT_TYPE
signal[0] << segment:u_segment.signal
signal[1] << segment:u_segment.signal
signal[2] << segment:u_segment.signal
signal[3] << segment:u_segment.signal
signal[4] << segment:u_segment.signal
signal[5] << segment:u_segment.signal
signal[6] << segment:u_segment.signal
signal[7] << segment:u_segment.signal
cat[0] << segment:u_segment.cat
cat[1] << segment:u_segment.cat
cat[2] << segment:u_segment.cat
cat[3] << segment:u_segment.cat
cat[4] << segment:u_segment.cat
cat[5] << segment:u_segment.cat
cat[6] << segment:u_segment.cat
cat[7] << segment:u_segment.cat
rgb_led[0] << standby:standby_inst.rgb_led
rgb_led[1] << standby:standby_inst.rgb_led
rgb_led[2] << standby:standby_inst.rgb_led
rgb_led[3] << standby:standby_inst.rgb_led
rgb_led[4] << standby:standby_inst.rgb_led
rgb_led[5] << standby:standby_inst.rgb_led
rgb_led[6] << standby:standby_inst.rgb_led
rgb_led[7] << standby:standby_inst.rgb_led
rgb_led[8] << standby:standby_inst.rgb_led
rgb_led[9] << standby:standby_inst.rgb_led
rgb_led[10] << standby:standby_inst.rgb_led
rgb_led[11] << standby:standby_inst.rgb_led
rgb_led[12] << standby:standby_inst.rgb_led
rgb_led[13] << standby:standby_inst.rgb_led
rgb_led[14] << standby:standby_inst.rgb_led
rgb_led[15] << standby:standby_inst.rgb_led
beep << music:beep_init.beep


|dice|prescaler:u_prescaler
clk_in => clk_out~reg0.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_in => counter[30].CLK
clk_in => counter[31].CLK
rst => clk_out~reg0.ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
rst => counter[28].ACLR
rst => counter[29].ACLR
rst => counter[30].ACLR
rst => counter[31].ACLR
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|debounce_double:uut_debounce
stop => btn_out~reg0.ACLR
stop => btn_state.ENA
stop => counter[16].ENA
stop => counter[15].ENA
stop => counter[14].ENA
stop => counter[13].ENA
stop => counter[12].ENA
stop => counter[11].ENA
stop => counter[10].ENA
stop => counter[9].ENA
stop => counter[8].ENA
stop => counter[7].ENA
stop => counter[6].ENA
stop => counter[5].ENA
stop => counter[4].ENA
stop => counter[3].ENA
stop => counter[2].ENA
stop => counter[1].ENA
stop => counter[0].ENA
clk => btn_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => btn_out~reg0.CLK
btn_in => always1.IN1
btn_in => btn_state.DATAB
btn_in => btn_out.DATAB
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|debounce_double:uut_debounce2
stop => btn_out~reg0.ACLR
stop => btn_state.ENA
stop => counter[16].ENA
stop => counter[15].ENA
stop => counter[14].ENA
stop => counter[13].ENA
stop => counter[12].ENA
stop => counter[11].ENA
stop => counter[10].ENA
stop => counter[9].ENA
stop => counter[8].ENA
stop => counter[7].ENA
stop => counter[6].ENA
stop => counter[5].ENA
stop => counter[4].ENA
stop => counter[3].ENA
stop => counter[2].ENA
stop => counter[1].ENA
stop => counter[0].ENA
clk => btn_state.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => btn_out~reg0.CLK
btn_in => always1.IN1
btn_in => btn_state.DATAB
btn_in => btn_out.DATAB
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|segment:u_segment
score1[0] => Decoder0.IN3
score1[1] => Decoder0.IN2
score1[2] => Decoder0.IN1
score1[3] => Decoder0.IN0
score2[0] => Decoder1.IN3
score2[1] => Decoder1.IN2
score2[2] => Decoder1.IN1
score2[3] => Decoder1.IN0
clk => signal[0]~reg0.CLK
clk => signal[1]~reg0.CLK
clk => signal[2]~reg0.CLK
clk => signal[3]~reg0.CLK
clk => signal[4]~reg0.CLK
clk => signal[5]~reg0.CLK
clk => signal[6]~reg0.CLK
clk => signal[7]~reg0.CLK
clk => cat[0]~reg0.CLK
clk => cat[7]~reg0.CLK
cat[0] <= cat[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cat[1] <= <VCC>
cat[2] <= <VCC>
cat[3] <= <VCC>
cat[4] <= <VCC>
cat[5] <= <VCC>
cat[6] <= <VCC>
cat[7] <= cat[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[0] <= signal[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[1] <= signal[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[2] <= signal[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[3] <= signal[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[4] <= signal[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[5] <= signal[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[6] <= signal[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal[7] <= signal[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|is_roll:u_roll
clk => clk.IN2
rst => rst.IN2
dice1[0] <= random:u_random1.dice
dice1[1] <= random:u_random1.dice
dice1[2] <= random:u_random1.dice
dice1[3] <= random:u_random1.dice
dice2[0] <= random2:u_random2.dice
dice2[1] <= random2:u_random2.dice
dice2[2] <= random2:u_random2.dice
dice2[3] <= random2:u_random2.dice
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => count1.OUTPUTSELECT
start1 => roll1.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => count2.OUTPUTSELECT
start2 => roll2.OUTPUTSELECT
finish => finish.IN2


|dice|is_roll:u_roll|random2:u_random2
clk => ~NO_FANOUT~
rst => dice[3].IN0
rst => lfsr[0].PRESET
rst => lfsr[1].ACLR
rst => lfsr[2].ACLR
rst => lfsr[3].ACLR
roll => dice[0]~reg0.CLK
roll => dice[1]~reg0.CLK
roll => dice[2]~reg0.CLK
roll => dice[3]~reg0.CLK
roll => lfsr[0].CLK
roll => lfsr[1].CLK
roll => lfsr[2].CLK
roll => lfsr[3].CLK
dice[0] <= dice[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[1] <= dice[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[2] <= dice[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[3] <= dice[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
finish => dice[3].IN1
finish => lfsr[3].ENA
finish => lfsr[2].ENA
finish => lfsr[1].ENA
finish => lfsr[0].ENA


|dice|is_roll:u_roll|random:u_random1
clk => ~NO_FANOUT~
rst => dice[3].IN0
rst => lfsr[0].PRESET
rst => lfsr[1].ACLR
rst => lfsr[2].ACLR
rst => lfsr[3].PRESET
roll => dice[0]~reg0.CLK
roll => dice[1]~reg0.CLK
roll => dice[2]~reg0.CLK
roll => dice[3]~reg0.CLK
roll => lfsr[0].CLK
roll => lfsr[1].CLK
roll => lfsr[2].CLK
roll => lfsr[3].CLK
dice[0] <= dice[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[1] <= dice[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[2] <= dice[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dice[3] <= dice[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
finish => dice[3].IN1
finish => lfsr[3].ENA
finish => lfsr[2].ENA
finish => lfsr[1].ENA
finish => lfsr[0].ENA


|dice|dot_matrix:u_dot_matrix
clk => flag[0].CLK
clk => flag[1].CLK
clk => flag[2].CLK
clk => g_col[0]~reg0.CLK
clk => g_col[1]~reg0.CLK
clk => g_col[2]~reg0.CLK
clk => g_col[3]~reg0.CLK
clk => g_col[4]~reg0.CLK
clk => g_col[5]~reg0.CLK
clk => g_col[6]~reg0.CLK
clk => g_col[7]~reg0.CLK
clk => r_col[0]~reg0.CLK
clk => r_col[1]~reg0.CLK
clk => r_col[2]~reg0.CLK
clk => r_col[3]~reg0.CLK
clk => r_col[4]~reg0.CLK
clk => r_col[5]~reg0.CLK
clk => r_col[6]~reg0.CLK
clk => r_col[7]~reg0.CLK
clk => row[0]~reg0.CLK
clk => row[1]~reg0.CLK
clk => row[2]~reg0.CLK
clk => row[3]~reg0.CLK
clk => row[4]~reg0.CLK
clk => row[5]~reg0.CLK
clk => row[6]~reg0.CLK
clk => row[7]~reg0.CLK
rst => g_col[0]~reg0.ACLR
rst => g_col[1]~reg0.ACLR
rst => g_col[2]~reg0.ACLR
rst => g_col[3]~reg0.ACLR
rst => g_col[4]~reg0.ACLR
rst => g_col[5]~reg0.ACLR
rst => g_col[6]~reg0.ACLR
rst => g_col[7]~reg0.ACLR
rst => r_col[0]~reg0.ACLR
rst => r_col[1]~reg0.ACLR
rst => r_col[2]~reg0.ACLR
rst => r_col[3]~reg0.ACLR
rst => r_col[4]~reg0.ACLR
rst => r_col[5]~reg0.ACLR
rst => r_col[6]~reg0.ACLR
rst => r_col[7]~reg0.ACLR
rst => row[0]~reg0.PRESET
rst => row[1]~reg0.PRESET
rst => row[2]~reg0.PRESET
rst => row[3]~reg0.PRESET
rst => row[4]~reg0.PRESET
rst => row[5]~reg0.PRESET
rst => row[6]~reg0.PRESET
rst => row[7]~reg0.PRESET
rst => flag[0].ENA
rst => flag[2].ENA
rst => flag[1].ENA
stop => ~NO_FANOUT~
dice1[0] => Decoder1.IN3
dice1[1] => Decoder0.IN2
dice1[1] => Decoder1.IN2
dice1[2] => Decoder0.IN1
dice1[2] => Decoder1.IN1
dice1[3] => Decoder0.IN0
dice1[3] => Decoder1.IN0
dice2[0] => Decoder3.IN3
dice2[1] => Decoder2.IN2
dice2[1] => Decoder3.IN2
dice2[2] => Decoder2.IN1
dice2[2] => Decoder3.IN1
dice2[3] => Decoder2.IN0
dice2[3] => Decoder3.IN0
row[0] <= row[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[1] <= row[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[2] <= row[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[3] <= row[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[4] <= row[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[5] <= row[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[6] <= row[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
row[7] <= row[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[0] <= r_col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[1] <= r_col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[2] <= r_col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[3] <= r_col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[4] <= r_col[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[5] <= r_col[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[6] <= r_col[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
r_col[7] <= r_col[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[0] <= g_col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[1] <= g_col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[2] <= g_col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[3] <= g_col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[4] <= g_col[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[5] <= g_col[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[6] <= g_col[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
g_col[7] <= g_col[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|standby:standby_inst
clk => rgb_led[0]~reg0.CLK
clk => rgb_led[1]~reg0.CLK
clk => rgb_led[2]~reg0.CLK
clk => rgb_led[3]~reg0.CLK
clk => rgb_led[4]~reg0.CLK
clk => rgb_led[5]~reg0.CLK
clk => rgb_led[6]~reg0.CLK
clk => rgb_led[7]~reg0.CLK
clk => rgb_led[8]~reg0.CLK
clk => rgb_led[9]~reg0.CLK
clk => rgb_led[10]~reg0.CLK
clk => rgb_led[11]~reg0.CLK
clk => rgb_led[12]~reg0.CLK
clk => rgb_led[13]~reg0.CLK
clk => rgb_led[14]~reg0.CLK
clk => rgb_led[15]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => score2_reg[0].CLK
clk => score2_reg[1].CLK
clk => score2_reg[2].CLK
clk => score2_reg[3].CLK
clk => score1_reg[0].CLK
clk => score1_reg[1].CLK
clk => score1_reg[2].CLK
clk => score1_reg[3].CLK
times => always1.IN0
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
times => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => rgb_led.OUTPUTSELECT
is_final => always1.IN1
rst => rgb_led[0]~reg0.ACLR
rst => rgb_led[1]~reg0.ACLR
rst => rgb_led[2]~reg0.ACLR
rst => rgb_led[3]~reg0.ACLR
rst => rgb_led[4]~reg0.ACLR
rst => rgb_led[5]~reg0.ACLR
rst => rgb_led[6]~reg0.ACLR
rst => rgb_led[7]~reg0.ACLR
rst => rgb_led[8]~reg0.ACLR
rst => rgb_led[9]~reg0.ACLR
rst => rgb_led[10]~reg0.ACLR
rst => rgb_led[11]~reg0.ACLR
rst => rgb_led[12]~reg0.ACLR
rst => rgb_led[13]~reg0.ACLR
rst => rgb_led[14]~reg0.ACLR
rst => rgb_led[15]~reg0.ACLR
rst => score2_reg[0].ACLR
rst => score2_reg[1].ACLR
rst => score2_reg[2].ACLR
rst => score2_reg[3].ACLR
rst => score1_reg[0].ACLR
rst => score1_reg[1].ACLR
rst => score1_reg[2].ACLR
rst => score1_reg[3].ACLR
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => cnt[3].ACLR
rst => cnt[4].ACLR
rst => cnt[5].ACLR
rst => cnt[6].ACLR
rst => cnt[7].ACLR
rst => cnt[8].ACLR
rst => cnt[9].ACLR
rst => cnt[10].ACLR
rst => cnt[11].ACLR
rst => cnt[12].ACLR
rst => cnt[13].ACLR
rst => cnt[14].ACLR
rst => cnt[15].ACLR
rst => cnt[16].ACLR
rst => cnt[17].ACLR
rst => cnt[18].ACLR
rst => cnt[19].ACLR
score1[0] => score1_reg[0].DATAIN
score1[1] => score1_reg[1].DATAIN
score1[2] => score1_reg[2].DATAIN
score1[3] => score1_reg[3].DATAIN
score2[0] => score2_reg[0].DATAIN
score2[1] => score2_reg[1].DATAIN
score2[2] => score2_reg[2].DATAIN
score2[3] => score2_reg[3].DATAIN
rgb_led[0] <= rgb_led[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[1] <= rgb_led[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[2] <= rgb_led[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[3] <= rgb_led[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[4] <= rgb_led[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[5] <= rgb_led[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[6] <= rgb_led[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[7] <= rgb_led[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[8] <= rgb_led[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[9] <= rgb_led[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[10] <= rgb_led[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[11] <= rgb_led[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[12] <= rgb_led[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[13] <= rgb_led[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[14] <= rgb_led[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rgb_led[15] <= rgb_led[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_finish => ~NO_FANOUT~


|dice|score:socre_inst
clk => switch.CLK
clk => is_final~reg0.CLK
clk => times~reg0.CLK
clk => finish~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
clk => cnt[26].CLK
clk => cnt[27].CLK
clk => sign.CLK
clk => flag2.CLK
clk => flag1.CLK
clk => start2_sync.CLK
clk => start1_sync.CLK
clk => start2_before.CLK
clk => start1_before.CLK
rst => state1[3].IN1
rst => state1_tmp[3].IN1
rst => is_final~reg0.ACLR
rst => times~reg0.ACLR
rst => finish~reg0.ACLR
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => cnt[3].ACLR
rst => cnt[4].ACLR
rst => cnt[5].ACLR
rst => cnt[6].ACLR
rst => cnt[7].ACLR
rst => cnt[8].ACLR
rst => cnt[9].ACLR
rst => cnt[10].ACLR
rst => cnt[11].ACLR
rst => cnt[12].ACLR
rst => cnt[13].ACLR
rst => cnt[14].ACLR
rst => cnt[15].ACLR
rst => cnt[16].ACLR
rst => cnt[17].ACLR
rst => cnt[18].ACLR
rst => cnt[19].ACLR
rst => cnt[20].ACLR
rst => cnt[21].ACLR
rst => cnt[22].ACLR
rst => cnt[23].ACLR
rst => cnt[24].ACLR
rst => cnt[25].ACLR
rst => cnt[26].ACLR
rst => cnt[27].ACLR
rst => state2[0]~reg0.ACLR
rst => state2[1]~reg0.ACLR
rst => state2[2]~reg0.ACLR
rst => state2[3]~reg0.ACLR
rst => state1[0]~reg0.ACLR
rst => state1[1]~reg0.ACLR
rst => state1[2]~reg0.ACLR
rst => state1[3]~reg0.ACLR
rst => start1_sync.ACLR
rst => start2_before.ACLR
rst => start1_before.ACLR
rst => difference[0].ACLR
rst => difference[1].ACLR
rst => difference[2].ACLR
rst => difference[3].ACLR
rst => state2_tmp[0].ACLR
rst => state2_tmp[1].ACLR
rst => state2_tmp[2].ACLR
rst => state2_tmp[3].ACLR
rst => state1_tmp[0].ACLR
rst => state1_tmp[1].ACLR
rst => state1_tmp[2].ACLR
rst => state1_tmp[3].ACLR
rst => start2_sync.ENA
rst => flag1.ENA
rst => flag2.ENA
rst => sign.ENA
rst => switch.ENA
start1 => start1_sync.DATAIN
start1 => always0.IN1
start2 => always0.IN1
start2 => start2_sync.DATAIN
dice1[0] => LessThan6.IN4
dice1[0] => LessThan8.IN4
dice1[1] => LessThan6.IN3
dice1[1] => LessThan8.IN3
dice1[2] => LessThan6.IN2
dice1[2] => LessThan8.IN2
dice1[3] => LessThan6.IN1
dice1[3] => LessThan8.IN1
dice2[0] => LessThan6.IN8
dice2[0] => LessThan8.IN8
dice2[1] => LessThan6.IN7
dice2[1] => LessThan8.IN7
dice2[2] => LessThan6.IN6
dice2[2] => LessThan8.IN6
dice2[3] => LessThan6.IN5
dice2[3] => LessThan8.IN5
state1[0] <= state1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state1[1] <= state1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state1[2] <= state1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state1[3] <= state1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state2[0] <= state2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state2[1] <= state2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state2[2] <= state2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state2[3] <= state2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
times <= times~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_final <= is_final~reg0.DB_MAX_OUTPUT_PORT_TYPE
finish <= finish~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dice|music:beep_init
clk => tmp_note[0].CLK
clk => tmp_note[1].CLK
clk => tmp_note[2].CLK
clk => tmp_note[3].CLK
clk => tmp_note[4].CLK
clk => tmp_note[5].CLK
clk => tmp_note[6].CLK
clk => tmp_note[7].CLK
clk => tmp_note[8].CLK
clk => tmp_note[9].CLK
clk => tmp_note[10].CLK
clk => tmp_note[11].CLK
clk => tmp_note[12].CLK
clk => tmp_note[13].CLK
clk => tmp_note[14].CLK
clk => tmp_note[15].CLK
clk => up_down.CLK
clk => beep~reg0.CLK
clk => note[0].CLK
clk => note[1].CLK
clk => note[2].CLK
clk => note[3].CLK
clk => note[4].CLK
clk => note[5].CLK
clk => note[6].CLK
clk => note[7].CLK
clk => note[8].CLK
clk => note[9].CLK
clk => note[10].CLK
clk => note[11].CLK
clk => note[12].CLK
clk => note[13].CLK
clk => note[14].CLK
clk => note[15].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
beep <= beep~reg0.DB_MAX_OUTPUT_PORT_TYPE
is_final => beep.OUTPUTSELECT
is_final => tmp_note[0].ENA
is_final => up_down.ENA
is_final => tmp_note[15].ENA
is_final => tmp_note[14].ENA
is_final => tmp_note[13].ENA
is_final => tmp_note[12].ENA
is_final => tmp_note[11].ENA
is_final => tmp_note[10].ENA
is_final => tmp_note[9].ENA
is_final => tmp_note[8].ENA
is_final => tmp_note[7].ENA
is_final => tmp_note[6].ENA
is_final => tmp_note[5].ENA
is_final => tmp_note[4].ENA
is_final => tmp_note[3].ENA
is_final => tmp_note[2].ENA
is_final => tmp_note[1].ENA
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => cnt[3].ACLR
rst => cnt[4].ACLR
rst => cnt[5].ACLR
rst => cnt[6].ACLR
rst => cnt[7].ACLR
rst => cnt[8].ACLR
rst => cnt[9].ACLR
rst => cnt[10].ACLR
rst => cnt[11].ACLR
rst => cnt[12].ACLR
rst => cnt[13].ACLR
rst => cnt[14].ACLR
rst => cnt[15].ACLR
rst => cnt[16].ACLR
rst => cnt[17].ACLR
rst => cnt[18].ACLR
rst => cnt[19].ACLR
rst => cnt[20].ACLR
rst => cnt[21].ACLR
rst => cnt[22].ACLR
rst => cnt[23].ACLR
rst => tmp_note[0].ACLR
rst => tmp_note[1].ACLR
rst => tmp_note[2].ACLR
rst => tmp_note[3].ACLR
rst => tmp_note[4].ACLR
rst => tmp_note[5].ACLR
rst => tmp_note[6].ACLR
rst => tmp_note[7].ACLR
rst => tmp_note[8].ACLR
rst => tmp_note[9].ACLR
rst => tmp_note[10].ACLR
rst => tmp_note[11].ACLR
rst => tmp_note[12].ACLR
rst => tmp_note[13].ACLR
rst => tmp_note[14].ACLR
rst => tmp_note[15].ACLR
rst => up_down.PRESET
rst => beep~reg0.ACLR
rst => note[15].ENA
rst => note[14].ENA
rst => note[13].ENA
rst => note[12].ENA
rst => note[11].ENA
rst => note[10].ENA
rst => note[9].ENA
rst => note[8].ENA
rst => note[7].ENA
rst => note[6].ENA
rst => note[5].ENA
rst => note[4].ENA
rst => note[3].ENA
rst => note[2].ENA
rst => note[1].ENA
rst => note[0].ENA


